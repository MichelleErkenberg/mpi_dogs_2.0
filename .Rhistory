x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Apply custom colors if defined
custom_colors <- c()  # Add your custom colors here if needed
if (length(custom_colors) > 0) {
p <- p + scale_fill_manual(values = custom_colors)
}
print(p)
View(dt.categories)
View(dt.combined)
View(dt.long)
# Filter the new TSV file based on conditions
dt.filter_valid <- dt.filter[Family == "Canidae" & ReadsDeduped >= reads_threshold]
# Read the new TSV file for filtering
dt.filter <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-', 'NA', ''))
# Define the threshold for ReadsDeduped
reads_threshold <- 50
# Filter the new TSV file based on conditions
dt.filter_valid <- dt.filter[Family == "Canidae" & ReadsDeduped >= reads_threshold]
View(dt.filter_valid)
readsdeduped <- setdiff(names(dt.filter_valid), c("sample_id", "ReadsDeduped"))
View(dog_columns)
View(readsdeduped)
readsdeduped <- setdiff(names(dt.filter_valid), !c("sample_id", "ReadsDeduped"))
?setdiff
readsdeduped <- setequal(names(dt.filter_valid), c("sample_id", "ReadsDeduped"))
View(readsdeduped)
readsdeduped <- intersect(names(dt.filter_valid), c("sample_id", "ReadsDeduped"))
View(readsdeduped)
# Create the bar plot ensuring only relevant sample_ids are shown for each location
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.long[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Apply custom colors if defined
custom_colors <- c()  # Add your custom colors here if needed
if (length(custom_colors) > 0) {
p <- p + scale_fill_manual(values = custom_colors)
}
print(p)
View(dt.filter_valid)
View(dt.filter)
View(dt.filter_valid)
dt.reads_merge <- merge(dt.long, dt.filter_valid, by = "sample_id", all.x = TRUE)
View(dt.reads_merge)
readsdeduped <- intersect(dt.reads_merge, c("sample_id", "ReadsDeduped"))
View(readsdeduped)
readsdeduped <- intersect(names(dt.reads_merge), c("sample_id", "ReadsDeduped"))
View(readsdeduped)
# Create the bar plot ensuring only relevant sample_ids are shown for each location
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.reads_merge[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Create the bar plot ensuring only relevant sample_ids are shown for each location
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.reads_merge[!is.na(value)], aes(x = factor(ReadsDeduped), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Apply custom colors if defined
custom_colors <- c()  # Add your custom colors here if needed
if (length(custom_colors) > 0) {
p <- p + scale_fill_manual(values = custom_colors)
}
print(p)
# Create the bar plot ensuring only relevant sample_ids are shown for each location
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.reads_merge[!is.na(value)], aes(x = factor(ReadsDeduped), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(ReadsDeduped), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Apply custom colors if defined
custom_colors <- c()  # Add your custom colors here if needed
if (length(custom_colors) > 0) {
p <- p + scale_fill_manual(values = custom_colors)
}
print(p)
# Create the bar plot ensuring only relevant sample_ids are shown for each location
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.reads_merge[!is.na(value)], aes(x = factor(ReadsDeduped, sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(ReadsDeduped), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Apply custom colors if defined
custom_colors <- c()  # Add your custom colors here if needed
if (length(custom_colors) > 0) {
p <- p + scale_fill_manual(values = custom_colors)
}
print(p)
# Create the bar plot ensuring only relevant sample_ids are shown for each location
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.reads_merge[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
# Apply custom colors if defined
custom_colors <- c()  # Add your custom colors here if needed
if (length(custom_colors) > 0) {
p <- p + scale_fill_manual(values = custom_colors)
}
print(p)
?geom_bar
View(dt.reads_merge)
View(dt.long)
View(dt.filter_valid)
View(dt.long)
View(dt.reads_merge)
View(dt.combined)
dt.reads_merge <- merge(dt.combined, dt.filter_valid, by = "sample_id", all.x = TRUE)
View(dt.reads_merge)
View(dt.reads_merge)
write.csv(dt.reads_merge, "dt.reads_merge.csv")
write.csv(dt.reads_merge, "data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/dt.reads_merge.csv") #just modify it to show ReadsDeduped in plot
library(data.table)
library(ggplot2)
# Set working directory
setwd("~/github/mpi_dogs_2.0/")
dt.main <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
# Read the TXT file with location categories
dt.categories <- fread('data/dog_samples/R_prep/sample_location.txt', na.strings = c('-', 'NA', ''))
# Define custom order for locations (adjust this list as needed)
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")  # Beispiel: Reihenfolge der Locations
# Merge main data with categories
dt.combined <- merge(dt.main, dt.categories, by = "sample_id", all.x = TRUE)
# Identify dog columns (all columns except sample_id and location)
dog_columns <- setdiff(names(dt.combined), c("sample_id", "location"))
dt.main <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
# Define custom order for locations (adjust this list as needed)
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")  # Beispiel: Reihenfolge der Locations
# Identify dog columns (all columns except sample_id and location)
dog_columns <- setdiff(names(dt.combined), c("sample_id", "location"))
View(dt.main)
View(dt.main)
library(data.table)
library(ggplot2)
# Set working directory
setwd("~/github/mpi_dogs_2.0/")
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
dog_columns <- setdiff(names(dt.combined), c("sample_id", "location"))
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
dt.main <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp.csv', na.strings = c('-', 'NA', ''))
# Read the TXT file with location categories
dt.categories <- fread('data/dog_samples/R_prep/sample_location.txt', na.strings = c('-', 'NA', ''))
View(dt.categories)
# Define custom order for locations (adjust this list as needed)
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
# Merge main data with categories
dt.combined <- merge(dt.main, dt.categories, by = "sample_id", all.x = TRUE)
View(dt.combined)
View(dt.combined)
# Identify dog columns (all columns except sample_id and location)
dog_columns <- setdiff(names(dt.combined), c("sample_id", "location"))
# Reshape data to long format
dt.long <- melt(dt.combined, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
View(dt.long)
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
View(dt_reads)
View(dt_reads)
View(dt.long)
View(dt_reads)
View(dt.combined)
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
View(dt.long)
View(dt_reads.long)
library(data.table)
library(ggplot2)
library(dplyr)
# Set working directory
setwd("~/github/mpi_dogs_2.0/")
# Read the main CSV file with dog data
dt.main <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp.csv', na.strings = c('-', 'NA', ''))
# Read the TXT file with location categories
dt.categories <- fread('data/dog_samples/R_prep/sample_location.txt', na.strings = c('-', 'NA', ''))
# Read the new TSV file for filtering
dt.filter <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-', 'NA', ''))
# Define the threshold for ReadsDeduped
reads_threshold <- 50
# Filter the new TSV file based on conditions
dt.filter_valid <- dt.filter[Family == "Canidae" & ReadsDeduped >= reads_threshold]
# Get the list of sample_ids that meet the criteria
valid_samples <- dt.filter_valid$sample_id
# Filter the main data to include only valid samples
dt.main_filtered <- dt.main[sample_id %in% valid_samples]
# Define custom order for locations
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)",
"Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office",
"Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)",
"Negativ Control")
# Merge main data with categories
dt.combined <- merge(dt.main_filtered, dt.categories, by = "sample_id", all.x = TRUE)
# Reshape data to long format
dt.long <- melt(dt.combined, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
# Extract number from sample_id for sorting
dt.long[, sample_number := as.numeric(sub(".*_", "", sample_id))]
# Sort data by location and sample_number
setorder(dt.long, location, sample_number)
# Apply custom order to location factor
dt.long$location <- factor(dt.long$location, levels = custom_order)
# Create the bar plot with asterisks for NA values
p <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values (valid samples with missing data)
geom_text(data = dt.long[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location (Filtered)",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
print(p)
dt.reads_merge <- merge(dt.combined, dt.filter_valid, by = "sample_id", all.x = TRUE)
write.csv(dt.reads_merge, "data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/dt.reads_merge.csv") #just modify it to show ReadsDeduped in plot
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
View(dt_reads.long)
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
View(dt.long)
library(data.table)
library(ggplot2)
library(dplyr)
# Set working directory
setwd("~/github/mpi_dogs_2.0/")
# Read the main CSV file with dog data
dt.main <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp.csv', na.strings = c('-', 'NA', ''))
# Read the TXT file with location categories
dt.categories <- fread('data/dog_samples/R_prep/sample_location.txt', na.strings = c('-', 'NA', ''))
# Read the new TSV file for filtering
dt.filter <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-', 'NA', ''))
# Define the threshold for ReadsDeduped
reads_threshold <- 50
# Filter the new TSV file based on conditions
dt.filter_valid <- dt.filter[Family == "Canidae" & ReadsDeduped >= reads_threshold]
# Get the list of sample_ids that meet the criteria
valid_samples <- dt.filter_valid$sample_id
# Filter the main data to include only valid samples
dt.main_filtered <- dt.main[sample_id %in% valid_samples]
# Define custom order for locations
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)",
"Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office",
"Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)",
"Negativ Control")
# Merge main data with categories
dt.combined <- merge(dt.main_filtered, dt.categories, by = "sample_id", all.x = TRUE)
View(dt.combined)
View(dt.combined)
# Reshape data to long format
dt.long <- melt(dt.combined, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
View(dt.long)
dt_reads.long[, sample_number := as.numeric(sub(".*_", "", sample_id))]
# Sort data by location and sample_number
setorder(dt.long, location, sample_number)
# Extract number from sample_id for sorting
dt.long[, sample_number := as.numeric(sub(".*_", "", sample_id))]
# Sort data by location and sample_number
setorder(dt.long, location, sample_number)
dt_reads.long$location <- factor(dt.long$location, levels = custom_order)
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
dt_reads.long[, sample_number := as.numeric(sub(".*_", "", sample_id))]
dt_reads.long$location <- factor(dt.long$location, levels = custom_order)
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt.reads_merge[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt_reads.long[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
print(p_reads)
View(dt.long)
View(dt_reads.long)
dt_reads.long[, sample_number := as.numeric(sub(".*_ ", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub(".*(", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub(".*(", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub("._*_(", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub("._* (", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub(".*_ (", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub(".*_ ", "", sample_id))]
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
?melt.data.table
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
dt_reads.long[, sample_number := as.numeric(sub(".*_ ", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub(".*_", "", sample_id))]
dt_reads.long$location <- factor(dt.long$location, levels = custom_order)
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt_reads.long[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
print(p_reads)
?as.numeric
dt_reads.long[, sample_number := as.numeric(sub(".*_.*", "", sample_id))]
dt_reads.long[, sample_number := as.numeric(sub(".*_*.", "", sample_id))]
dt_reads.long[, sample_number := as.integer(sub("sample_(\\d+)\\(.*", "\\1", sample_id))]
dt_reads.long$location <- factor(dt.long$location, levels = custom_order)
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt_reads.long[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
print(p_reads)
dt_reads <- fread('data/dog_samples/R_prep/all_dogs_with_ThorA_Cami_without_Lily/R_prep_sample_vs_dog_all_dogs_with_ThorA_Cami_without_Lily_10snp_mod.csv', na.strings = c('-', 'NA', ''))
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
View(dt_reads)
custom_order <- c("Dog Office (Container)", "Dog Office (Lily/ThorA)", "Hallway (Lily/ThorA)", "Dog Office (Anda/Charlie)", "Hallway (Anda/Charlie)", "Non-Dog Office", "Elevator", "Main Entrance", "Lab (PCR Lab)", "Lab (Cleanroom)", "Negativ Control")
dog_columns <- setdiff(names(dt_reads), c("sample_id", "location"))
dt_reads.long <- melt(dt_reads, id.vars = c("sample_id", "location"),
variable.name = "dog", value.name = "value")
View(dt_reads.long)
dt_reads.long[, sample_number := as.integer(sub("sample_(\\d+)\\(.*", "\\1", sample_id))]
View(dt_reads.long)
dt_reads.long$location <- factor(dt.long$location, levels = custom_order)
dt_reads.long$location <- factor(dt_reads.long$location, levels = custom_order)
View(dt_reads.long)
p_reads <- ggplot() +
# Add bars only for non-NA values
geom_bar(data = dt_reads.long[!is.na(value)], aes(x = factor(sample_id), y = value, fill = dog),
stat = "identity", position = "dodge") +
# Add asterisks for NA values at the correct positions
geom_text(data = dt_reads.long[is.na(value)], aes(x = factor(sample_id), y = 0, label = "*"),
position = position_dodge(width = 0.9), vjust = -0.5) +
facet_grid(dog ~ location, scales = "free_x", space = "free_x") +
theme_bw() +
labs(title = "Dog Values by Sample and Location",
x = "Sample ID", y = "Value", fill = "Dog") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.text = element_text(size = 10, face = "bold"),
legend.position = "none")
print(p_reads)
ggsave("figures/subfig_1.png", p_reads, width = 24, height = 20, limitsize = FALSE)
